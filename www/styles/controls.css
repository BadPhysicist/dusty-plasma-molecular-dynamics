.controls {
  display: inline-block;

  vertical-align: middle;

  padding-left: 7px;
  border-radius: 10px;

  background-color: rgba(76, 175, 80, 0.1);

  --gray-color: #d3d3d3;
  --accent-color: #4CAF50;
  --scale-size: 50px;
  --scale-margin-size: 10px;
}

.controls .title {
  text-decoration: underline;
}

/* .controls div {
  display: inline-block;
} */

/* Button */

.button {
  display: inline-block;

  width: 140px;
  height: 25px;

  margin: 10px 10px 10px 0px;
  padding: 10px 15px;

  border-radius:28px;
  border: 1px solid green;

  background-color: var(--accent-color);
  color: white;

  text-align: center;
  font-size: 20px;
  text-shadow: 0px 1px 0px green;

  cursor: pointer;
  user-select: none;
}

.button:hover {
  opacity: 0.9;
}

.button:active {
  position: relative;
  top: 1px;
}

.button img {
  height: 25px;

  margin-right: 3px;
  margin-bottom: -6px;
}

/* Toggle */

.toggle {
  margin: 12px 0px;
}

.toggle label {
  /* display: block; */
  position: relative;

  padding-left: 31px;
  cursor: pointer;
  font-size: 17px;

  user-select: none;
}

/* Hide the browser's default checkbox */
.toggle label input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

/* Create a custom checkbox */
.checkmark {
  position: absolute;
  top: -1px;
  left: 0;
  height: 21px;
  width: 21px;
  background-color: var(--gray-color);
}

/* On mouse-over, add a grey background color */
.toggle label:hover input ~ .checkmark {
  background-color: #ccc;
}

/* When the checkbox is checked, add a blue background */
.toggle label input:checked ~ .checkmark {
  background-color: var(--accent-color);
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
  content: "";
  position: absolute;
  display: none;
}

/* Show the checkmark when checked */
.toggle label input:checked ~ .checkmark:after {
  display: block;
}

/* Style the checkmark/indicator */
.toggle label .checkmark:after {
  left: 6px;
  top: 2.2px;
  width: 5px;
  height: 10px;
  border: solid white;
  border-width: 0 3px 3px 0;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
}

/* Slider */

.slider input[type="range"] {
  -webkit-appearance: none;
  width: 350px;
  height: 15px;
  border-radius: 5px;
  background: var(--gray-color);
  outline: none;
}

.slider input[type="range"]::-webkit-slider-thumb {
  -webkit-appearance: none;
  width: 25px;
  height: 25px;
  border-radius: 50%;
  background: var(--accent-color);
  cursor: pointer;
}

/* Graph */

.graph {
  margin-top: 20px;
}

.graph canvas.graphCanvas {
  border: 1px solid black;
}

/* Heatmap */

.heatmap {
  margin-top: 20px;
}

.heatmap canvas.heatmapCanvas {
  border: 1px solid black;
  background-color: white;
}

/* Scale */

.scale {
  display: inline-block;
  position: relative;
}

.scale p {
  margin: 0px;
  font-size: 20px;
}

.scale.left {
  width: var(--scale-size);
}

.scale.left p {
  position: absolute;
    top: 50%;

  transform-origin: top left;
  transform: rotate(-90deg) translateX(-50%);
}

.scale.left canvas {
  position: relative;
    top: var(--scale-margin-size);
    left: 50%;
}

.scale.bottom {
  height: var(--scale-size);

  position: relative;
    left: calc(var(--scale-size) - var(--scale-margin-size) + 1px);

  margin-top: -5px;
}

.scale.bottom p {
  position: absolute;
    top: 35%;
    left: 50%;

  transform: translateX(-50%);
}
